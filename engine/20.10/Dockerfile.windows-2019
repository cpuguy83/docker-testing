ARG GO_VERSION=1.16.6
ARG GO_IMAGE=golang:${GO_VERSION}

FROM --platform=${BUILDPLATFORM} ${GO_IMAGE} AS go

FROM --platform=${BUILDPLATFORM} ubuntu:18.04 AS build
RUN echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
ARG APT_MIRROR=http://azure.archive.ubuntu.com/ubuntu
RUN [ -z "${APT_MIRROR}" ] && exit 0; sed -i "s,^deb http://archive\.ubuntu\.com/ubuntu,deb ${APT_MIRROR}," /etc/apt/sources.list && cat /etc/apt/sources.list
RUN \
	--mount=type=cache,target=/var/lib/apt \
	--mount=type=cache,target=/var/cache/apt \
	apt-get update && apt-get install -y \
		binutils-mingw-w64 \
		g++-mingw-w64-x86-64 \
		gcc \
		git \
		make \
		pkg-config \
		zip
WORKDIR /go/src/github.com/docker/docker
ARG ENGINE_REPO=https://github.com/moby/moby.git
RUN git clone --depth=1 "${ENGINE_REPO}" .
# v20.10.5
ARG ENGINE_COMMIT=363e9a88a11be517d9e8c65c998ff56f774eb4dc
RUN if [ -n "${ENGINE_COMMIT}" ]; then git fetch origin "${ENGINE_COMMIT}" && git checkout "${ENGINE_COMMIT}"; fi
ARG TARGETARCH
ARG TEST_FILTER
ENV CC=x86_64-w64-mingw32-gcc
ENV GOOS=windows
ENV BUILDMODE="default"
ENV CGO_ENABLED=1
RUN --mount=src=build.sh,target=/tmp/build.sh \
	--mount=from=go,src=/usr/local/go,target=/usr/local/go \
	--mount=type=cache,id=gocache-ubuntu-1804,target=/root/.cache/go-build \
	--mount=type=cache,target=/go/pkg/mod \
	PATH="/usr/local/go/bin:${PATH}" GOPATH=/go OUTPUT=/tmp/build /tmp/build.sh

FROM scratch as binary
COPY --from=build /tmp/build/ /
COPY --from=build /go/src/github.com/docker/docker /src/github.com/docker/docker