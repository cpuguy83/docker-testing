name: Integration
on:
  workflow_dispatch:
    inputs:
      testFilter:
        description: Run a subset of tests(TEST_FILTER)
        default: ''

jobs:
  integration-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "ubuntu-18.04"]
        engine: ["20.10"]
        containerd: ["1.4", "1.5"]
        runc: ["1.0"]
        cli: ["20.10", "19.03", ""]
        include:
          - cli: "20.10"
            suite: DockerDaemonSuite|DockerExternalVolumeSuite|DockerPluginSuite|DockerSuite|DockerSwarmSuite
          - cli: "20.10"
            suite: DockerHubPullSuite|DockerNetworkSuite|DockerRegistryAuthHtpasswdSuite|DockerRegistryAuthTokenSuite|DockerRegistrySuite|DockerSchema1RegistrySuite
          - cli: "19.03"
            suite: DockerDaemonSuite|DockerExternalVolumeSuite|DockerPluginSuite|DockerSuite|DockerSwarmSuite
          - cli: "19.03"
            suite: DockerHubPullSuite|DockerNetworkSuite|DockerRegistryAuthHtpasswdSuite|DockerRegistryAuthTokenSuite|DockerRegistrySuite|DockerSchema1RegistrySuite
    name: os=${{ matrix.os }} engine=${{ matrix.engine }} containerd=${{ matrix.containerd }} cli=${{ matrix.cli }} runc=${{ matrix.runc }}
    steps:
    - uses: actions/checkout@v2
    - name: Login to GHCR
      run: echo ${{ secrets.CR_PAT }} | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build all the things
      env:
        DISTRO: ${{matrix.os}}
        ENGINE_VERSION: ${{matrix.engine}}
        CLI_VERSION: ${{matrix.cli}}
        RUNC_VERSION: ${{matrix.runc}}
        CONTAINERD_VERSION: ${{matrix.containerd}}
      run: |
        set -e -x

        engine_tag="engine-$(echo ${{matrix.os}}${{matrix.engine}} | sha256sum | awk '{{ print $1 }}')"
        cli_tag="cli-$(echo ${{matrix.os}}${{matrix.cli}} | sha256sum | awk '{{ print $1 }}')"
        containerd_tag="containerd-$(echo ${{matrix.os}}${{matrix.containerd}} | sha256sum | awk '{{ print $1 }}')"
        runc_tag="runc-$(echo ${{matrix.os}}${{matrix.runc}} | sha256sum | awk '{{ print $1 }}')"

        export ENGINE_CACHE_FROM="ghcr.io/${{ github.repository }}/cache:${engine_tag}"
        export CLI_CACHE_FROM="ghcr.io/${{ github.repository }}/cache:${cli_tag}"
        export CONTAINERD_CACHE_FROM="ghcr.io/${{ github.repository }}/cache:${containerd_tag}"
        export RUNC_CACHE_FROM="ghcr.io/${{ github.repository }}/cache:${runc_tag}"

        if [ -z "CLI_VERSION" ]; then
          # Tests need the CLI even though we will not be using the CLI suite here
          export CLI_VERSION="20.10"
        fi

        make -j 4 engine containerd runc cli
    - name: Test
      env:
        DOCKER_INTEGRATION_TESTS_VERIFIED: true
        APT_MIRROR: http://azure.archive.ubuntu.com/ubuntu
        CACHE_FROM: ghcr.io/${{github.repository}}/${{matrix.os}}:latest
        TEST_FILTER: ${{ github.event.inputs.testFilter }}
      run: |
        if [ -z "${{matrix.cli}}" ]; then
          export TEST_SKIP_INTEGRATION_CLI=1
        else
          export TEST_SKIP_INTEGRATION=1
          export TESTFLAGS="-test.run Test(${{matrix.suite}})"
        fi

        make test DISTRO=${{matrix.os}}
    - name: Cleanup
      if: failure() || cancelled()
      run: sudo chown -R $(id -u):$(id -g) out
    - uses: actions/upload-artifact@v2
      if: failure() || cancelled()
      with:
        name: os=${{ matrix.os }} engine=${{ matrix.engine }} containerd=${{ matrix.containerd }} cli=${{ matrix.cli }} runc=${{ matrix.runc }}
        path: |
          out/tests/**
          !out/tests/test-integration/**/root/*
          !out/tests/**/*.sock
        retention-days: 1
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: out/tests/test-integration/*.xml
        report_individual_runs: true